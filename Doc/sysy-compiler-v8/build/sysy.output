Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnitList

    2 CompUnitList: FuncDef
    3             | Decl
    4             | CompUnitList FuncDef
    5             | CompUnitList Decl

    6 FuncDef: VoidType IDENT '(' ')' Block
    7        | VoidType IDENT '(' FuncFParams ')' Block
    8        | BType IDENT '(' ')' Block
    9        | BType IDENT '(' FuncFParams ')' Block

   10 FuncFParams: FuncFParam
   11            | FuncFParams ',' FuncFParam

   12 FuncFParam: BType IDENT

   13 FuncRParams: Exp
   14            | FuncRParams ',' Exp

   15 Block: '{' BlockItemList '}'

   16 Stmt: OpenStmt
   17     | ClosedStmt

   18 ClosedStmt: SimpleStmt
   19           | IF '(' Exp ')' ClosedStmt ELSE ClosedStmt
   20           | WHILE '(' Exp ')' ClosedStmt

   21 OpenStmt: IF '(' Exp ')' Stmt
   22         | IF '(' Exp ')' ClosedStmt ELSE OpenStmt
   23         | WHILE '(' Exp ')' OpenStmt

   24 SimpleStmt: RETURN Exp ';'
   25           | RETURN ';'
   26           | LVal '=' Exp ';'
   27           | Block
   28           | Exp ';'
   29           | ';'
   30           | BREAK ';'
   31           | CONTINUE ';'

   32 Exp: LOrExp

   33 LOrExp: LAndExp
   34       | LOrExp OROP LAndExp

   35 LAndExp: EqExp
   36        | LAndExp ANDOP EqExp

   37 EqExp: RelExp
   38      | EqExp EQOP RelExp

   39 RelExp: AddExp
   40       | RelExp RELOP AddExp

   41 AddExp: MulExp
   42       | AddExp ADDOP MulExp

   43 MulExp: UnaryExp
   44       | MulExp MULOP UnaryExp

   45 UnaryExp: PrimaryExp
   46         | UNARYOP UnaryExp
   47         | IDENT '(' ')'
   48         | IDENT '(' FuncRParams ')'

   49 PrimaryExp: '(' Exp ')'
   50           | Number
   51           | LVal

   52 Decl: ConstDecl
   53     | VarDecl

   54 ConstDecl: CONST BType ConstDefList ';'

   55 ConstDef: IDENT '=' ConstInitVal

   56 ConstInitVal: ConstExp

   57 BlockItem: Decl
   58          | Stmt

   59 ConstExp: Exp

   60 VarDecl: BType VarDefList ';'

   61 VarDef: IDENT
   62       | IDENT '=' InitVal

   63 InitVal: Exp

   64 BlockItemList: %empty
   65              | BlockItemList BlockItem

   66 ConstDefList: ConstDef
   67             | ConstDefList ',' ConstDef

   68 VarDefList: VarDef
   69           | VarDefList ',' VarDef

   70 Number: INT_CONST

   71 LVal: IDENT

   72 BType: INT

   73 VoidType: VOID

   74 UNARYOP: '+'
   75        | '-'
   76        | '!'

   77 MULOP: '*'
   78      | '/'
   79      | '%'

   80 ADDOP: '+'
   81      | '-'

   82 RELOP: LE
   83      | GE
   84      | '<'
   85      | '>'

   86 EQOP: EQ
   87     | NE

   88 ANDOP: AND

   89 OROP: OR


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 76
    '%' (37) 79
    '(' (40) 6 7 8 9 19 20 21 22 23 47 48 49
    ')' (41) 6 7 8 9 19 20 21 22 23 47 48 49
    '*' (42) 77
    '+' (43) 74 80
    ',' (44) 11 14 67 69
    '-' (45) 75 81
    '/' (47) 78
    ';' (59) 24 25 26 28 29 30 31 54 60
    '<' (60) 84
    '=' (61) 26 55 62
    '>' (62) 85
    '{' (123) 15
    '}' (125) 15
    error (256)
    INT (258) 72
    VOID (259) 73
    RETURN (260) 24 25
    CONST (261) 54
    IF (262) 19 21 22
    ELSE (263) 19 22
    WHILE (264) 20 23
    BREAK (265) 30
    CONTINUE (266) 31
    IDENT <str_val> (267) 6 7 8 9 12 47 48 55 61 62 71
    INT_CONST <int_val> (268) 70
    LE <str_val> (269) 82
    GE <str_val> (270) 83
    EQ <str_val> (271) 86
    NE <str_val> (272) 87
    AND <str_val> (273) 88
    OR <str_val> (274) 89


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    CompUnit (36)
        on left: 1
        on right: 0
    CompUnitList <ast_val> (37)
        on left: 2 3 4 5
        on right: 1 4 5
    FuncDef <ast_val> (38)
        on left: 6 7 8 9
        on right: 2 4
    FuncFParams <vec_val> (39)
        on left: 10 11
        on right: 7 9 11
    FuncFParam <ast_val> (40)
        on left: 12
        on right: 10 11
    FuncRParams <vec_val> (41)
        on left: 13 14
        on right: 14 48
    Block <ast_val> (42)
        on left: 15
        on right: 6 7 8 9 27
    Stmt <ast_val> (43)
        on left: 16 17
        on right: 21 58
    ClosedStmt <ast_val> (44)
        on left: 18 19 20
        on right: 17 19 20 22
    OpenStmt <ast_val> (45)
        on left: 21 22 23
        on right: 16 22 23
    SimpleStmt <ast_val> (46)
        on left: 24 25 26 27 28 29 30 31
        on right: 18
    Exp <ast_val> (47)
        on left: 32
        on right: 13 14 19 20 21 22 23 24 26 28 49 59 63
    LOrExp <ast_val> (48)
        on left: 33 34
        on right: 32 34
    LAndExp <ast_val> (49)
        on left: 35 36
        on right: 33 34 36
    EqExp <ast_val> (50)
        on left: 37 38
        on right: 35 36 38
    RelExp <ast_val> (51)
        on left: 39 40
        on right: 37 38 40
    AddExp <ast_val> (52)
        on left: 41 42
        on right: 39 40 42
    MulExp <ast_val> (53)
        on left: 43 44
        on right: 41 42 44
    UnaryExp <ast_val> (54)
        on left: 45 46 47 48
        on right: 43 44 46
    PrimaryExp <ast_val> (55)
        on left: 49 50 51
        on right: 45
    Decl <ast_val> (56)
        on left: 52 53
        on right: 3 5 57
    ConstDecl <ast_val> (57)
        on left: 54
        on right: 52
    ConstDef <ast_val> (58)
        on left: 55
        on right: 66 67
    ConstInitVal <ast_val> (59)
        on left: 56
        on right: 55
    BlockItem <ast_val> (60)
        on left: 57 58
        on right: 65
    ConstExp <ast_val> (61)
        on left: 59
        on right: 56
    VarDecl <ast_val> (62)
        on left: 60
        on right: 53
    VarDef <ast_val> (63)
        on left: 61 62
        on right: 68 69
    InitVal <ast_val> (64)
        on left: 63
        on right: 62
    BlockItemList <vec_val> (65)
        on left: 64 65
        on right: 15 65
    ConstDefList <vec_val> (66)
        on left: 66 67
        on right: 54 67
    VarDefList <vec_val> (67)
        on left: 68 69
        on right: 60 69
    Number <int_val> (68)
        on left: 70
        on right: 50
    LVal <str_val> (69)
        on left: 71
        on right: 26 51
    BType <str_val> (70)
        on left: 72
        on right: 8 9 12 54 60
    VoidType <str_val> (71)
        on left: 73
        on right: 6 7
    UNARYOP <str_val> (72)
        on left: 74 75 76
        on right: 46
    MULOP <str_val> (73)
        on left: 77 78 79
        on right: 44
    ADDOP <str_val> (74)
        on left: 80 81
        on right: 42
    RELOP <str_val> (75)
        on left: 82 83 84 85
        on right: 40
    EQOP <str_val> (76)
        on left: 86 87
        on right: 38
    ANDOP <str_val> (77)
        on left: 88
        on right: 36
    OROP <str_val> (78)
        on left: 89
        on right: 34


State 0

    0 $accept: . CompUnit $end

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    CONST  shift, and go to state 3

    CompUnit      go to state 4
    CompUnitList  go to state 5
    FuncDef       go to state 6
    Decl          go to state 7
    ConstDecl     go to state 8
    VarDecl       go to state 9
    BType         go to state 10
    VoidType      go to state 11


State 1

   72 BType: INT .

    $default  reduce using rule 72 (BType)


State 2

   73 VoidType: VOID .

    $default  reduce using rule 73 (VoidType)


State 3

   54 ConstDecl: CONST . BType ConstDefList ';'

    INT  shift, and go to state 1

    BType  go to state 12


State 4

    0 $accept: CompUnit . $end

    $end  shift, and go to state 13


State 5

    1 CompUnit: CompUnitList .
    4 CompUnitList: CompUnitList . FuncDef
    5             | CompUnitList . Decl

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    CONST  shift, and go to state 3

    $default  reduce using rule 1 (CompUnit)

    FuncDef    go to state 14
    Decl       go to state 15
    ConstDecl  go to state 8
    VarDecl    go to state 9
    BType      go to state 10
    VoidType   go to state 11


State 6

    2 CompUnitList: FuncDef .

    $default  reduce using rule 2 (CompUnitList)


State 7

    3 CompUnitList: Decl .

    $default  reduce using rule 3 (CompUnitList)


State 8

   52 Decl: ConstDecl .

    $default  reduce using rule 52 (Decl)


State 9

   53 Decl: VarDecl .

    $default  reduce using rule 53 (Decl)


State 10

    8 FuncDef: BType . IDENT '(' ')' Block
    9        | BType . IDENT '(' FuncFParams ')' Block
   60 VarDecl: BType . VarDefList ';'

    IDENT  shift, and go to state 16

    VarDef      go to state 17
    VarDefList  go to state 18


State 11

    6 FuncDef: VoidType . IDENT '(' ')' Block
    7        | VoidType . IDENT '(' FuncFParams ')' Block

    IDENT  shift, and go to state 19


State 12

   54 ConstDecl: CONST BType . ConstDefList ';'

    IDENT  shift, and go to state 20

    ConstDef      go to state 21
    ConstDefList  go to state 22


State 13

    0 $accept: CompUnit $end .

    $default  accept


State 14

    4 CompUnitList: CompUnitList FuncDef .

    $default  reduce using rule 4 (CompUnitList)


State 15

    5 CompUnitList: CompUnitList Decl .

    $default  reduce using rule 5 (CompUnitList)


State 16

    8 FuncDef: BType IDENT . '(' ')' Block
    9        | BType IDENT . '(' FuncFParams ')' Block
   61 VarDef: IDENT .
   62       | IDENT . '=' InitVal

    '('  shift, and go to state 23
    '='  shift, and go to state 24

    $default  reduce using rule 61 (VarDef)


State 17

   68 VarDefList: VarDef .

    $default  reduce using rule 68 (VarDefList)


State 18

   60 VarDecl: BType VarDefList . ';'
   69 VarDefList: VarDefList . ',' VarDef

    ','  shift, and go to state 25
    ';'  shift, and go to state 26


State 19

    6 FuncDef: VoidType IDENT . '(' ')' Block
    7        | VoidType IDENT . '(' FuncFParams ')' Block

    '('  shift, and go to state 27


State 20

   55 ConstDef: IDENT . '=' ConstInitVal

    '='  shift, and go to state 28


State 21

   66 ConstDefList: ConstDef .

    $default  reduce using rule 66 (ConstDefList)


State 22

   54 ConstDecl: CONST BType ConstDefList . ';'
   67 ConstDefList: ConstDefList . ',' ConstDef

    ','  shift, and go to state 29
    ';'  shift, and go to state 30


State 23

    8 FuncDef: BType IDENT '(' . ')' Block
    9        | BType IDENT '(' . FuncFParams ')' Block

    INT  shift, and go to state 1
    ')'  shift, and go to state 31

    FuncFParams  go to state 32
    FuncFParam   go to state 33
    BType        go to state 34


State 24

   62 VarDef: IDENT '=' . InitVal

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 41
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    InitVal     go to state 50
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 25

   69 VarDefList: VarDefList ',' . VarDef

    IDENT  shift, and go to state 54

    VarDef  go to state 55


State 26

   60 VarDecl: BType VarDefList ';' .

    $default  reduce using rule 60 (VarDecl)


State 27

    6 FuncDef: VoidType IDENT '(' . ')' Block
    7        | VoidType IDENT '(' . FuncFParams ')' Block

    INT  shift, and go to state 1
    ')'  shift, and go to state 56

    FuncFParams  go to state 57
    FuncFParam   go to state 33
    BType        go to state 34


State 28

   55 ConstDef: IDENT '=' . ConstInitVal

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp           go to state 58
    LOrExp        go to state 42
    LAndExp       go to state 43
    EqExp         go to state 44
    RelExp        go to state 45
    AddExp        go to state 46
    MulExp        go to state 47
    UnaryExp      go to state 48
    PrimaryExp    go to state 49
    ConstInitVal  go to state 59
    ConstExp      go to state 60
    Number        go to state 51
    LVal          go to state 52
    UNARYOP       go to state 53


State 29

   67 ConstDefList: ConstDefList ',' . ConstDef

    IDENT  shift, and go to state 20

    ConstDef  go to state 61


State 30

   54 ConstDecl: CONST BType ConstDefList ';' .

    $default  reduce using rule 54 (ConstDecl)


State 31

    8 FuncDef: BType IDENT '(' ')' . Block

    '{'  shift, and go to state 62

    Block  go to state 63


State 32

    9 FuncDef: BType IDENT '(' FuncFParams . ')' Block
   11 FuncFParams: FuncFParams . ',' FuncFParam

    ')'  shift, and go to state 64
    ','  shift, and go to state 65


State 33

   10 FuncFParams: FuncFParam .

    $default  reduce using rule 10 (FuncFParams)


State 34

   12 FuncFParam: BType . IDENT

    IDENT  shift, and go to state 66


State 35

   47 UnaryExp: IDENT . '(' ')'
   48         | IDENT . '(' FuncRParams ')'
   71 LVal: IDENT .

    '('  shift, and go to state 67

    $default  reduce using rule 71 (LVal)


State 36

   70 Number: INT_CONST .

    $default  reduce using rule 70 (Number)


State 37

   49 PrimaryExp: '(' . Exp ')'

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 68
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 38

   74 UNARYOP: '+' .

    $default  reduce using rule 74 (UNARYOP)


State 39

   75 UNARYOP: '-' .

    $default  reduce using rule 75 (UNARYOP)


State 40

   76 UNARYOP: '!' .

    $default  reduce using rule 76 (UNARYOP)


State 41

   63 InitVal: Exp .

    $default  reduce using rule 63 (InitVal)


State 42

   32 Exp: LOrExp .
   34 LOrExp: LOrExp . OROP LAndExp

    OR  shift, and go to state 69

    $default  reduce using rule 32 (Exp)

    OROP  go to state 70


State 43

   33 LOrExp: LAndExp .
   36 LAndExp: LAndExp . ANDOP EqExp

    AND  shift, and go to state 71

    $default  reduce using rule 33 (LOrExp)

    ANDOP  go to state 72


State 44

   35 LAndExp: EqExp .
   38 EqExp: EqExp . EQOP RelExp

    EQ  shift, and go to state 73
    NE  shift, and go to state 74

    $default  reduce using rule 35 (LAndExp)

    EQOP  go to state 75


State 45

   37 EqExp: RelExp .
   40 RelExp: RelExp . RELOP AddExp

    LE   shift, and go to state 76
    GE   shift, and go to state 77
    '<'  shift, and go to state 78
    '>'  shift, and go to state 79

    $default  reduce using rule 37 (EqExp)

    RELOP  go to state 80


State 46

   39 RelExp: AddExp .
   42 AddExp: AddExp . ADDOP MulExp

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    $default  reduce using rule 39 (RelExp)

    ADDOP  go to state 83


State 47

   41 AddExp: MulExp .
   44 MulExp: MulExp . MULOP UnaryExp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 41 (AddExp)

    MULOP  go to state 87


State 48

   43 MulExp: UnaryExp .

    $default  reduce using rule 43 (MulExp)


State 49

   45 UnaryExp: PrimaryExp .

    $default  reduce using rule 45 (UnaryExp)


State 50

   62 VarDef: IDENT '=' InitVal .

    $default  reduce using rule 62 (VarDef)


State 51

   50 PrimaryExp: Number .

    $default  reduce using rule 50 (PrimaryExp)


State 52

   51 PrimaryExp: LVal .

    $default  reduce using rule 51 (PrimaryExp)


State 53

   46 UnaryExp: UNARYOP . UnaryExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    UnaryExp    go to state 88
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 54

   61 VarDef: IDENT .
   62       | IDENT . '=' InitVal

    '='  shift, and go to state 24

    $default  reduce using rule 61 (VarDef)


State 55

   69 VarDefList: VarDefList ',' VarDef .

    $default  reduce using rule 69 (VarDefList)


State 56

    6 FuncDef: VoidType IDENT '(' ')' . Block

    '{'  shift, and go to state 62

    Block  go to state 89


State 57

    7 FuncDef: VoidType IDENT '(' FuncFParams . ')' Block
   11 FuncFParams: FuncFParams . ',' FuncFParam

    ')'  shift, and go to state 90
    ','  shift, and go to state 65


State 58

   59 ConstExp: Exp .

    $default  reduce using rule 59 (ConstExp)


State 59

   55 ConstDef: IDENT '=' ConstInitVal .

    $default  reduce using rule 55 (ConstDef)


State 60

   56 ConstInitVal: ConstExp .

    $default  reduce using rule 56 (ConstInitVal)


State 61

   67 ConstDefList: ConstDefList ',' ConstDef .

    $default  reduce using rule 67 (ConstDefList)


State 62

   15 Block: '{' . BlockItemList '}'

    $default  reduce using rule 64 (BlockItemList)

    BlockItemList  go to state 91


State 63

    8 FuncDef: BType IDENT '(' ')' Block .

    $default  reduce using rule 8 (FuncDef)


State 64

    9 FuncDef: BType IDENT '(' FuncFParams ')' . Block

    '{'  shift, and go to state 62

    Block  go to state 92


State 65

   11 FuncFParams: FuncFParams ',' . FuncFParam

    INT  shift, and go to state 1

    FuncFParam  go to state 93
    BType       go to state 34


State 66

   12 FuncFParam: BType IDENT .

    $default  reduce using rule 12 (FuncFParam)


State 67

   47 UnaryExp: IDENT '(' . ')'
   48         | IDENT '(' . FuncRParams ')'

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    ')'        shift, and go to state 94
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    FuncRParams  go to state 95
    Exp          go to state 96
    LOrExp       go to state 42
    LAndExp      go to state 43
    EqExp        go to state 44
    RelExp       go to state 45
    AddExp       go to state 46
    MulExp       go to state 47
    UnaryExp     go to state 48
    PrimaryExp   go to state 49
    Number       go to state 51
    LVal         go to state 52
    UNARYOP      go to state 53


State 68

   49 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 97


State 69

   89 OROP: OR .

    $default  reduce using rule 89 (OROP)


State 70

   34 LOrExp: LOrExp OROP . LAndExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    LAndExp     go to state 98
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 71

   88 ANDOP: AND .

    $default  reduce using rule 88 (ANDOP)


State 72

   36 LAndExp: LAndExp ANDOP . EqExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    EqExp       go to state 99
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 73

   86 EQOP: EQ .

    $default  reduce using rule 86 (EQOP)


State 74

   87 EQOP: NE .

    $default  reduce using rule 87 (EQOP)


State 75

   38 EqExp: EqExp EQOP . RelExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    RelExp      go to state 100
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 76

   82 RELOP: LE .

    $default  reduce using rule 82 (RELOP)


State 77

   83 RELOP: GE .

    $default  reduce using rule 83 (RELOP)


State 78

   84 RELOP: '<' .

    $default  reduce using rule 84 (RELOP)


State 79

   85 RELOP: '>' .

    $default  reduce using rule 85 (RELOP)


State 80

   40 RelExp: RelExp RELOP . AddExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    AddExp      go to state 101
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 81

   80 ADDOP: '+' .

    $default  reduce using rule 80 (ADDOP)


State 82

   81 ADDOP: '-' .

    $default  reduce using rule 81 (ADDOP)


State 83

   42 AddExp: AddExp ADDOP . MulExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    MulExp      go to state 102
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 84

   77 MULOP: '*' .

    $default  reduce using rule 77 (MULOP)


State 85

   78 MULOP: '/' .

    $default  reduce using rule 78 (MULOP)


State 86

   79 MULOP: '%' .

    $default  reduce using rule 79 (MULOP)


State 87

   44 MulExp: MulExp MULOP . UnaryExp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    UnaryExp    go to state 103
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 88

   46 UnaryExp: UNARYOP UnaryExp .

    $default  reduce using rule 46 (UnaryExp)


State 89

    6 FuncDef: VoidType IDENT '(' ')' Block .

    $default  reduce using rule 6 (FuncDef)


State 90

    7 FuncDef: VoidType IDENT '(' FuncFParams ')' . Block

    '{'  shift, and go to state 62

    Block  go to state 104


State 91

   15 Block: '{' BlockItemList . '}'
   65 BlockItemList: BlockItemList . BlockItem

    INT        shift, and go to state 1
    RETURN     shift, and go to state 105
    CONST      shift, and go to state 3
    IF         shift, and go to state 106
    WHILE      shift, and go to state 107
    BREAK      shift, and go to state 108
    CONTINUE   shift, and go to state 109
    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '{'        shift, and go to state 62
    '}'        shift, and go to state 110
    ';'        shift, and go to state 111
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Block       go to state 112
    Stmt        go to state 113
    ClosedStmt  go to state 114
    OpenStmt    go to state 115
    SimpleStmt  go to state 116
    Exp         go to state 117
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Decl        go to state 118
    ConstDecl   go to state 8
    BlockItem   go to state 119
    VarDecl     go to state 9
    Number      go to state 51
    LVal        go to state 120
    BType       go to state 121
    UNARYOP     go to state 53


State 92

    9 FuncDef: BType IDENT '(' FuncFParams ')' Block .

    $default  reduce using rule 9 (FuncDef)


State 93

   11 FuncFParams: FuncFParams ',' FuncFParam .

    $default  reduce using rule 11 (FuncFParams)


State 94

   47 UnaryExp: IDENT '(' ')' .

    $default  reduce using rule 47 (UnaryExp)


State 95

   14 FuncRParams: FuncRParams . ',' Exp
   48 UnaryExp: IDENT '(' FuncRParams . ')'

    ')'  shift, and go to state 122
    ','  shift, and go to state 123


State 96

   13 FuncRParams: Exp .

    $default  reduce using rule 13 (FuncRParams)


State 97

   49 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 49 (PrimaryExp)


State 98

   34 LOrExp: LOrExp OROP LAndExp .
   36 LAndExp: LAndExp . ANDOP EqExp

    AND  shift, and go to state 71

    $default  reduce using rule 34 (LOrExp)

    ANDOP  go to state 72


State 99

   36 LAndExp: LAndExp ANDOP EqExp .
   38 EqExp: EqExp . EQOP RelExp

    EQ  shift, and go to state 73
    NE  shift, and go to state 74

    $default  reduce using rule 36 (LAndExp)

    EQOP  go to state 75


State 100

   38 EqExp: EqExp EQOP RelExp .
   40 RelExp: RelExp . RELOP AddExp

    LE   shift, and go to state 76
    GE   shift, and go to state 77
    '<'  shift, and go to state 78
    '>'  shift, and go to state 79

    $default  reduce using rule 38 (EqExp)

    RELOP  go to state 80


State 101

   40 RelExp: RelExp RELOP AddExp .
   42 AddExp: AddExp . ADDOP MulExp

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    $default  reduce using rule 40 (RelExp)

    ADDOP  go to state 83


State 102

   42 AddExp: AddExp ADDOP MulExp .
   44 MulExp: MulExp . MULOP UnaryExp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 42 (AddExp)

    MULOP  go to state 87


State 103

   44 MulExp: MulExp MULOP UnaryExp .

    $default  reduce using rule 44 (MulExp)


State 104

    7 FuncDef: VoidType IDENT '(' FuncFParams ')' Block .

    $default  reduce using rule 7 (FuncDef)


State 105

   24 SimpleStmt: RETURN . Exp ';'
   25           | RETURN . ';'

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    ';'        shift, and go to state 124
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 125
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 106

   19 ClosedStmt: IF . '(' Exp ')' ClosedStmt ELSE ClosedStmt
   21 OpenStmt: IF . '(' Exp ')' Stmt
   22         | IF . '(' Exp ')' ClosedStmt ELSE OpenStmt

    '('  shift, and go to state 126


State 107

   20 ClosedStmt: WHILE . '(' Exp ')' ClosedStmt
   23 OpenStmt: WHILE . '(' Exp ')' OpenStmt

    '('  shift, and go to state 127


State 108

   30 SimpleStmt: BREAK . ';'

    ';'  shift, and go to state 128


State 109

   31 SimpleStmt: CONTINUE . ';'

    ';'  shift, and go to state 129


State 110

   15 Block: '{' BlockItemList '}' .

    $default  reduce using rule 15 (Block)


State 111

   29 SimpleStmt: ';' .

    $default  reduce using rule 29 (SimpleStmt)


State 112

   27 SimpleStmt: Block .

    $default  reduce using rule 27 (SimpleStmt)


State 113

   58 BlockItem: Stmt .

    $default  reduce using rule 58 (BlockItem)


State 114

   17 Stmt: ClosedStmt .

    $default  reduce using rule 17 (Stmt)


State 115

   16 Stmt: OpenStmt .

    $default  reduce using rule 16 (Stmt)


State 116

   18 ClosedStmt: SimpleStmt .

    $default  reduce using rule 18 (ClosedStmt)


State 117

   28 SimpleStmt: Exp . ';'

    ';'  shift, and go to state 130


State 118

   57 BlockItem: Decl .

    $default  reduce using rule 57 (BlockItem)


State 119

   65 BlockItemList: BlockItemList BlockItem .

    $default  reduce using rule 65 (BlockItemList)


State 120

   26 SimpleStmt: LVal . '=' Exp ';'
   51 PrimaryExp: LVal .

    '='  shift, and go to state 131

    $default  reduce using rule 51 (PrimaryExp)


State 121

   60 VarDecl: BType . VarDefList ';'

    IDENT  shift, and go to state 54

    VarDef      go to state 17
    VarDefList  go to state 18


State 122

   48 UnaryExp: IDENT '(' FuncRParams ')' .

    $default  reduce using rule 48 (UnaryExp)


State 123

   14 FuncRParams: FuncRParams ',' . Exp

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 132
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 124

   25 SimpleStmt: RETURN ';' .

    $default  reduce using rule 25 (SimpleStmt)


State 125

   24 SimpleStmt: RETURN Exp . ';'

    ';'  shift, and go to state 133


State 126

   19 ClosedStmt: IF '(' . Exp ')' ClosedStmt ELSE ClosedStmt
   21 OpenStmt: IF '(' . Exp ')' Stmt
   22         | IF '(' . Exp ')' ClosedStmt ELSE OpenStmt

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 134
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 127

   20 ClosedStmt: WHILE '(' . Exp ')' ClosedStmt
   23 OpenStmt: WHILE '(' . Exp ')' OpenStmt

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 135
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 128

   30 SimpleStmt: BREAK ';' .

    $default  reduce using rule 30 (SimpleStmt)


State 129

   31 SimpleStmt: CONTINUE ';' .

    $default  reduce using rule 31 (SimpleStmt)


State 130

   28 SimpleStmt: Exp ';' .

    $default  reduce using rule 28 (SimpleStmt)


State 131

   26 SimpleStmt: LVal '=' . Exp ';'

    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Exp         go to state 136
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 52
    UNARYOP     go to state 53


State 132

   14 FuncRParams: FuncRParams ',' Exp .

    $default  reduce using rule 14 (FuncRParams)


State 133

   24 SimpleStmt: RETURN Exp ';' .

    $default  reduce using rule 24 (SimpleStmt)


State 134

   19 ClosedStmt: IF '(' Exp . ')' ClosedStmt ELSE ClosedStmt
   21 OpenStmt: IF '(' Exp . ')' Stmt
   22         | IF '(' Exp . ')' ClosedStmt ELSE OpenStmt

    ')'  shift, and go to state 137


State 135

   20 ClosedStmt: WHILE '(' Exp . ')' ClosedStmt
   23 OpenStmt: WHILE '(' Exp . ')' OpenStmt

    ')'  shift, and go to state 138


State 136

   26 SimpleStmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 139


State 137

   19 ClosedStmt: IF '(' Exp ')' . ClosedStmt ELSE ClosedStmt
   21 OpenStmt: IF '(' Exp ')' . Stmt
   22         | IF '(' Exp ')' . ClosedStmt ELSE OpenStmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    WHILE      shift, and go to state 107
    BREAK      shift, and go to state 108
    CONTINUE   shift, and go to state 109
    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '{'        shift, and go to state 62
    ';'        shift, and go to state 111
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Block       go to state 112
    Stmt        go to state 140
    ClosedStmt  go to state 141
    OpenStmt    go to state 115
    SimpleStmt  go to state 116
    Exp         go to state 117
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 120
    UNARYOP     go to state 53


State 138

   20 ClosedStmt: WHILE '(' Exp ')' . ClosedStmt
   23 OpenStmt: WHILE '(' Exp ')' . OpenStmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    WHILE      shift, and go to state 107
    BREAK      shift, and go to state 108
    CONTINUE   shift, and go to state 109
    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '{'        shift, and go to state 62
    ';'        shift, and go to state 111
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Block       go to state 112
    ClosedStmt  go to state 142
    OpenStmt    go to state 143
    SimpleStmt  go to state 116
    Exp         go to state 117
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 120
    UNARYOP     go to state 53


State 139

   26 SimpleStmt: LVal '=' Exp ';' .

    $default  reduce using rule 26 (SimpleStmt)


State 140

   21 OpenStmt: IF '(' Exp ')' Stmt .

    $default  reduce using rule 21 (OpenStmt)


State 141

   17 Stmt: ClosedStmt .
   19 ClosedStmt: IF '(' Exp ')' ClosedStmt . ELSE ClosedStmt
   22 OpenStmt: IF '(' Exp ')' ClosedStmt . ELSE OpenStmt

    ELSE  shift, and go to state 144

    $default  reduce using rule 17 (Stmt)


State 142

   20 ClosedStmt: WHILE '(' Exp ')' ClosedStmt .

    $default  reduce using rule 20 (ClosedStmt)


State 143

   23 OpenStmt: WHILE '(' Exp ')' OpenStmt .

    $default  reduce using rule 23 (OpenStmt)


State 144

   19 ClosedStmt: IF '(' Exp ')' ClosedStmt ELSE . ClosedStmt
   22 OpenStmt: IF '(' Exp ')' ClosedStmt ELSE . OpenStmt

    RETURN     shift, and go to state 105
    IF         shift, and go to state 106
    WHILE      shift, and go to state 107
    BREAK      shift, and go to state 108
    CONTINUE   shift, and go to state 109
    IDENT      shift, and go to state 35
    INT_CONST  shift, and go to state 36
    '('        shift, and go to state 37
    '{'        shift, and go to state 62
    ';'        shift, and go to state 111
    '+'        shift, and go to state 38
    '-'        shift, and go to state 39
    '!'        shift, and go to state 40

    Block       go to state 112
    ClosedStmt  go to state 145
    OpenStmt    go to state 146
    SimpleStmt  go to state 116
    Exp         go to state 117
    LOrExp      go to state 42
    LAndExp     go to state 43
    EqExp       go to state 44
    RelExp      go to state 45
    AddExp      go to state 46
    MulExp      go to state 47
    UnaryExp    go to state 48
    PrimaryExp  go to state 49
    Number      go to state 51
    LVal        go to state 120
    UNARYOP     go to state 53


State 145

   19 ClosedStmt: IF '(' Exp ')' ClosedStmt ELSE ClosedStmt .

    $default  reduce using rule 19 (ClosedStmt)


State 146

   22 OpenStmt: IF '(' Exp ')' ClosedStmt ELSE OpenStmt .

    $default  reduce using rule 22 (OpenStmt)
