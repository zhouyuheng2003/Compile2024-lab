decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

global @var_0 = alloc i32, zeroinit

fun @func(@x_0: i32): i32 {
%entry_func:
	%x_0 = alloc i32
	store @x_0, %x_0
	%0 = load @var_0
	%1 = load %x_0
	%2 = add %0, %1
	store %2, @var_0
	%3 = load @var_0
	ret %3
}

fun @main(): i32 {
%entry_main:
	@a_0 = alloc i32
	store 1, @a_0
	@b_0 = alloc i32
	%4 = sub 0, 3
	%5 = mul 2, %4
	%6 = add 1, %5
	store %6, @b_0
	@c_0 = alloc i32
	store 3, @c_0
	@a_1 = alloc i32
	store 0, @a_1
	%7 = load @a_1
	%8 = load @b_0
	%9 = div %8, 2
	%10 = add %7, %9
	store %10, @a_1
	%11 = load @a_0
	%12 = eq %11, 2
	%13 = alloc i32
	br %12, %then_0, %else_0
%then_0:
	store 1, %13
	jump %end_0
%else_0:
	%15 = load @a_0
	%16 = ge %15, 4
	%14 = ne %16, 0
	store %14, %13
	jump %end_0
%end_0:
	%17 = load %13
	br %17, %then_1, %else_1
%then_1:
	ret 0
%else_1:
	%18 = load @a_0
	%19 = add %18, 1
	store %19, @b_0
	jump %end_1
%end_1:
	@i_0 = alloc i32
	store 0, @i_0
	@pow_0 = alloc i32
	store 1, @pow_0
	jump %while_0
%while_0:
	%20 = load @i_0
	%21 = lt %20, 7
	br %21, %do_0, %while_end_0
%do_0:
	%22 = load @pow_0
	%23 = mul %22, 2
	store %23, @pow_0
	%24 = load @i_0
	%25 = add %24, 1
	store %25, @i_0
	%26 = load @i_0
	%27 = gt %26, 3
	br %27, %then_2, %end_2
%then_2:
	jump %while_end_0
%end_2:
	jump %while_0
%while_end_0:
	%28 = load @a_0
	%29 = add %28, 3
	%30 = call @func(1)
	call @putint(%30)
	%31 = load @var_0
	%32 = mul %31, 10
	store %32, @var_0
	%33 = load @var_0
	%34 = call @func(%33)
	call @putint(%34)
	call @putch(10)
	%35 = eq 6, 0
	%36 = sub 0, %35
	%37 = sub 0, %36
	ret %37
}


